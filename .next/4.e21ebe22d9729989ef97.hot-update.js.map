{"version":3,"sources":["/Users/parkerziegler/Documents/repos/repertoire/pages/components/Audio.js"],"names":["PLAY","PAUSE","Audio","state","currentTime","value","duration","isPlay","parseDuration","audio","minutes","Math","floor","toString","seconds","Number","substr","parseCurrentTime","currentHour","parseInt","currentMinute","currentSeconds","toFixed","parseValue","convertValueToCurrentTime","onLoadedMetadata","e","target","setState","onPlaying","onInput","onClickHandler","isPlaying","play","setInterval","pause","props","className","children","albumArt","albumName","backgroundColor","color","alternativeColor","React","Component","StyledAudio","styled"],"mappings":"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","file":"4.e21ebe22d9729989ef97.hot-update.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport ImagePalette from 'react-image-palette';\n\nimport Play from './Play';\nimport Pause from './Pause';\nimport Forward from './Forward';\nimport Reverse from './Reverse';\n\nconst PLAY = \"/static/play.svg\";\nconst PAUSE = \"/static/pause.svg\";\n\nclass Audio extends React.Component {\n\n  state = {\n    currentTime: '00:00',\n    value: 0,\n    duration: '00:00',\n    isPlay: false,\n  }\n\n  parseDuration = (audio) => {\n    const duration = audio.duration;\n    const minutes = Math.floor(duration / 60).toString();\n    const seconds = Number(duration - minutes * 60).toString().substr(0, 2);\n    return `${minutes}:${seconds}`;\n  }\n\n  parseCurrentTime = (audio) => {\n    const currentTime = audio.currentTime;\n    const currentHour = parseInt(currentTime / 3600) % 24;\n    const currentMinute = parseInt(currentTime / 60) % 60;\n    const currentSeconds = Number(currentTime % 60).toFixed();\n    return (currentMinute < 10 ? `0${currentMinute}` : `${currentMinute}`) + \":\" + (currentSeconds < 10 ? `0${currentSeconds}` : `${currentSeconds}`);\n  }\n\n  parseValue = (audio) => {\n    const duration = audio.duration;\n    const currentTime = audio.currentTime;\n    return currentTime / duration;\n  }\n\n  convertValueToCurrentTime = (value) => {\n    const seconds = value * this.audio.duration;\n    this.audio.currentTime = seconds;\n    return this.audio.currentTime;\n  }\n\n  onLoadedMetadata = (e) => {\n    const currentTime = this.parseCurrentTime(e.target);\n    const duration = this.parseDuration(e.target);\n    this.setState({\n      currentTime,\n      duration\n    });\n  }\n\n  onPlaying = () => {\n    const currentTime = this.parseCurrentTime(this.audio);\n    const value = this.parseValue(this.audio);\n    this.setState({\n      currentTime,\n      value\n    });\n  }\n\n  onInput = (e) => {\n    this.convertValueToCurrentTime(e.target.value);\n    const currentTime = this.parseCurrentTime(this.audio);\n    this.setState({\n      currentTime,\n      value: e.target.value,\n    });\n  }\n\n  onClickHandler = () => {\n    if (!this.state.isPlaying) {\n      // play the audio\n      this.audio.play();\n  \n      // start tracking the currentTime\n      setInterval(() => {\n        this.onPlaying();\n      }, 500);\n  \n      // switch the play pause icon\n      this.setState({\n        isPlaying: true\n      });\n    } else {\n      // pause the audio\n      this.audio.pause();\n      this.setState({\n        isPlaying: false\n      });\n    }\n  }\n\n  render() {\n\n    const { className, children, albumArt, albumName } = this.props;\n    const { currentTime, duration, isPlaying, value } = this.state;\n\n    return (\n      <ImagePalette image={albumArt}>\n        {({ backgroundColor, color, alternativeColor }) => (\n          <div className={className} style={{ backgroundColor }}>\n            <audio ref={audio => this.audio = audio} onLoadedMetadata={this.onLoadedMetadata} onPlaying={this.onPlaying}>\n              {children}\n            </audio>\n            <div className=\"controls\">\n              <Reverse onHold={this.onClickHandler} fill={color} stroke={color} />\n              {isPlaying\n                ? <Pause onClick={this.onClickHandler} fill={color} stroke={color} />\n                : <Play onClick={this.onClickHandler} fill={color} stroke={color} />\n              }\n              <Forward onHold={this.onClickHandler} fill={color} stroke={color} />\n            </div>\n            <div className=\"progress-container\">\n              <span className=\"progress-label\" style={{ color }}>{currentTime}</span>\n              <input type=\"range\" value={value} max={1} step={0.01} onInput={this.onInput} style={{ backgroundColor: color }} />\n              <span className=\"progress-label\" style={{ color }}>{duration}</span>\n            </div>\n            <img src={albumArt} alt={albumName} /> \n          </div>\n        )}\n      </ImagePalette>\n    );\n  }\n}\n\nconst StyledAudio = styled(Audio)`\n  display: flex;\n  width: 50%;\n  height: 100px;\n  justify-content: space-between;\n  align-items: center;\n  margin: 1vh;\n  box-sizing: border-box;\n\n  .controls {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 25%;\n  }\n\n  .play {\n    height: 50%;\n  }\n\n  .progress-container {\n    width: 55%;\n    display: flex;\n    align-items: center;\n\n    .progress-bg, .progress-fg {\n      height: 7px;\n    }\n\n    input[type=range] {\n      -webkit-appearance: none;\n      width: 100%;\n      margin: 6px;\n    }\n\n    input[type=range]:focus {\n      outline: none;\n    }\n\n    input[type=range]::-webkit-slider-runnable-track {\n      width: 100%;\n      height: 6px;\n      cursor: pointer;\n      box-shadow: 1.5px 1.5px 2.1px #000000, 0px 0px 1.5px #0d0d0d;\n      border-radius: 1.5px;\n      border: 0.2px solid rgba(0, 0, 0, 0);\n    }\n\n    input[type=range]::-webkit-slider-thumb {\n      box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n      border: 1px solid rgba(0, 0, 0, 0);\n      height: 18px;\n      width: 18px;\n      border-radius: 9px;\n      background: #fff;\n      cursor: pointer;\n      -webkit-appearance: none;\n      margin-top: -6.2px;\n    }\n\n    input[type=range]:focus::-webkit-slider-runnable-track {\n      background: inherit;\n      opacity: 0.5;\n    }\n\n    input[type=range]::-moz-range-track {\n      width: 100%;\n      height: 6px;\n      cursor: pointer;\n      box-shadow: 1.5px 1.5px 2.1px #000000, 0px 0px 1.5px #0d0d0d;\n      border-radius: 1.5px;\n      border: 0.2px solid rgba(0, 0, 0, 0);\n    }\n\n    input[type=range]::-moz-range-thumb {\n      box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n      border: 1px solid rgba(0, 0, 0, 0);\n      height: 18px;\n      width: 18px;\n      border-radius: 9px;\n      background: #fff;\n      cursor: pointer;\n    }\n\n    input[type=range]::-ms-track {\n      width: 100%;\n      height: 6px;\n      cursor: pointer;\n      background: transparent;\n      border-color: transparent;\n      color: transparent;\n    }\n\n    input[type=range]::-ms-fill-lower {\n      background: #fc7014;\n      border: 0.2px solid rgba(0, 0, 0, 0);\n      border-radius: 3px;\n      box-shadow: 1.5px 1.5px 2.1px #000000, 0px 0px 1.5px #0d0d0d;\n    }\n\n    input[type=range]::-ms-fill-upper {\n      background: #fc7f2d;\n      border: 0.2px solid rgba(0, 0, 0, 0);\n      border-radius: 3px;\n      box-shadow: 1.5px 1.5px 2.1px #000000, 0px 0px 1.5px #0d0d0d;\n    }\n\n    input[type=range]::-ms-thumb {\n      box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n      border: 1px solid rgba(0, 0, 0, 0);\n      height: 18px;\n      width: 18px;\n      border-radius: 9px;\n      background: #fff;\n      cursor: pointer;\n      height: 6px;\n    }\n\n    input[type=range]:focus::-ms-fill-lower {\n      background: inherit;\n    }\n\n    input[type=range]:focus::-ms-fill-upper {\n      background: inherit;\n    }\n\n    .progress-label {\n      color: white;\n      font-family: 'Space Mono', monospace;\n    }\n  }\n\n  img {\n    height: 100%;\n  }\n`;\n\nexport default StyledAudio;\n\n\n// WEBPACK FOOTER //\n// ./pages/components/Audio.js"],"sourceRoot":""}